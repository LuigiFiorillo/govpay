<?xml version="1.0" encoding="UTF-8"?>
<b:beans xmlns="http://www.springframework.org/schema/security"
        xmlns:b="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security.xsd">
        
        <!-- entry point per l'httpbasic per gestire il contenuto della response nel caso id utenza non autorizzata. -->
        <b:bean id="formAuthenticationEntryPoint" class="it.govpay.rs.v1.authentication.entrypoint.FormAuthenticationEntryPoint" />
        
        <!-- Abilito gestione della sicurezza tramite annotazioni nel codice Java -->
        <global-method-security
                secured-annotations="enabled">
        </global-method-security>
        
        <!-- Servizio di accesso alla base dati dell'applicazione per il check delle richieste effettuate dalle utenze -->
        <b:bean id="userDetailServiceUtenze" class="it.govpay.core.dao.autorizzazione.AutenticazioneUtenzeRegistrateDAO" >
        </b:bean>
        
                <!-- Implementazione custom di un authenticationProvider per gestire l'autenticazione delle utenze -->
        <b:bean id="authenticationProviderUtenze" class="it.govpay.rs.v1.authentication.provider.UtenzeAuthenticationProvider" >
                <b:property name="userDetailsService" ref="userDetailServiceUtenze"/>
        </b:bean>
        
        <!-- Definisco il sistema di autenticazione, nel nostro caso utilizziamo una sorgente degli utenti basata su file di proprietÃ  -->
        <authentication-manager alias="authenticationManager">
                <authentication-provider ref="authenticationProviderUtenze">
                </authentication-provider>
        </authentication-manager>
        
        <!-- handler per le chiamate di login che vanno male -->
        <b:bean id="authFailureHandler" class="it.govpay.rs.v1.authentication.handler.DefaultAuthenticationFailureHandler" />
        <!-- handler per le chiamate di login che vanno bene -->
        <b:bean id="authSuccessHandler" class="it.govpay.rs.v1.authentication.handler.GovpayAuthenticationSuccessHandler" />
        <!-- handler per le chiamate di logout che vanno bene -->
        <b:bean id="logoutSuccessHandler" class="it.govpay.rs.v1.authentication.handler.DefaultLogoutSuccessHandler" />
        
        
        <!-- Configurazione della sicurezza su tutte le url esposte dall'applicazione
                create-session="stateless" sta ad indicare che non vogliamo nessuna sessione ed ogni richiesta dovra' essere autorizzata.

                use-expressions="false" sta ad indicare che non posso scrivere Expression per indicare le regole di accesso, ma solo ruoli
                L'attributo access deve quindi contenere ruoli.

                use-expressions="true" permette invece di usare le seguenti espressioni:
                hasRole([role]) Returns true if the current principal has the specified role.
                hasAnyRole([role1,role2])       Returns true if the current principal has any of the supplied roles (given as a comma-separated list of strings)
                principal       Allows direct access to the principal object representing the current user
                authentication  Allows direct access to the current Authentication object obtained from the SecurityContext
                permitAll       Always evaluates to true
                denyAll Always evaluates to false
                isAnonymous()   Returns true if the current principal is an anonymous user
                isRememberMe()  Returns true if the current principal is a remember-me user
                isAuthenticated()       Returns true if the user is not anonymous
                isFullyAuthenticated()  Returns true if the user is not an anonymous or a remember-me user
         -->

        <!-- Configurazione Form -->
        <http auto-config="false" use-expressions="true" pattern="/**" create-session="ifRequired" entry-point-ref="formAuthenticationEntryPoint" authentication-manager-ref="authenticationManager">

            <csrf disabled="true" />

            <intercept-url pattern="/*.css" access="permitAll" />
            <intercept-url pattern="/*.ico" access="permitAll" />
            <intercept-url pattern="/*.js" access="permitAll" />
            <intercept-url pattern="/*.eot" access="permitAll" />
            <intercept-url pattern="/*.svg" access="permitAll" />
            <intercept-url pattern="/*.woff2" access="permitAll" />
            <intercept-url pattern="/*.woff" access="permitAll" />
            <intercept-url pattern="/*.tff" access="permitAll" />
            <intercept-url pattern="/**" access="permitAll" />
            <intercept-url pattern="/api/**" access="isFullyAuthenticated()" />

            <form-login login-page="/public/index.html" username-parameter="username" authentication-success-handler-ref="authSuccessHandler"
                    password-parameter="password" authentication-failure-handler-ref="authFailureHandler" 
                            login-processing-url="/login" />

          	<logout logout-url="/logout" success-handler-ref="logoutSuccessHandler" 
         	 delete-cookies="JSESSIONID" invalidate-session="true" />

            <anonymous />

	       <session-management session-fixation-protection="migrateSession" invalid-session-url="/">
	                        <concurrency-control expired-url="/" max-sessions="2" />
	       </session-management>


	        <headers>
	              <content-type-options disabled="true"/>
	              <frame-options disabled="true"/>
	              <xss-protection disabled="true"/>
	      </headers>

      </http>
        
</b:beans>
        