package it.govpay.pagamento.test;


import javax.validation.Valid;
import javax.ws.rs.Consumes;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.QueryParam;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.responses.ApiResponses;

/**
 * GovPay - API Pagamento
 *
 * <p>No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 */
@Path("/test")
public interface PagamentiApi  {

    /**
     * Avvio di un pagamento di pendenze
     *
     * L&#x27;operazione consente di avviare una sessione di pagamento per una o più pendenze. Le pendenze presenti in posizione debitoria possono essere riferite tramite identificativo della pendenza del gestionale proprietario  (_idA2A_ e _idPendenza_) oppure con gli estremi dell&#x27;avviso (_idDominio_  e _iuv_). Nel caso invece di pendenze spontanee, è possibile fornire direttamente i dati costitutivi.
     *
     */
    @POST
    @Path("/pagamenti")
    @Consumes({ "application/json" })
    @Produces({ "application/json", "application/problem+json" })
    @Operation(summary = "Avvio di un pagamento di pendenze", tags={ "Pagamenti" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "201", description = "Pagamento creato", content = @Content(schema = @Schema(implementation = PagamentoCreato.class))),
        @ApiResponse(responseCode = "400", description = "Bad Request", content = @Content(schema = @Schema(implementation = Problem.class))),
        @ApiResponse(responseCode = "401", description = "Not Authenticated", content = @Content(schema = @Schema(implementation = Problem.class))),
        @ApiResponse(responseCode = "403", description = "Not Authorized", content = @Content(schema = @Schema(implementation = Problem.class))),
        @ApiResponse(responseCode = "503", description = "Service Unavailable", content = @Content(schema = @Schema(implementation = Problem.class))),
        @ApiResponse(responseCode = "502", description = "Bad Gateway", content = @Content(schema = @Schema(implementation = Problem.class))) })
    public PagamentoCreato addPagamento(@Valid NuovoPagamento body, @QueryParam("idSessionePortale") String idSessionePortale);

}
