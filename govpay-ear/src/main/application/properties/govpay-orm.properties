it.govpay.orm.databaseType=${it.govpay.orm.databaseType}
it.govpay.orm.showSql=${it.govpay.orm.showSql}
it.govpay.orm.dataSourceJNDIName=${it.govpay.orm.dataSourceJNDIName}
it.govpay.orm.dataSourceAppName=${it.govpay.orm.dataSourceAppName.ear}

it.govpay.orm.nativeQuery.list=estrattiConto,estrattiContoVersamenti,csvVersamenti

# Query acquisizione estrattiConto

it.govpay.orm.nativeQuery.estrattiConto.postgresql=SELECT data_pagamento, importo_pagato, iur1, iuv, f.cod_flusso as cod_flusso_rendicontazione, sv.cod_singolo_versamento_ente as cod_singolo_versamento_ente, sv.note as note, f.cod_bic_riversamento as cod_bic_riversamento,  f.iur as iur2, iban_accredito FROM ( SELECT id_singolo_versamento, id_fr_applicazione, data_pagamento, importo_pagato, iur1, iuv, iban_accredito FROM ( ( select p.id_singolo_versamento as id_singolo_versamento, p.id_fr_applicazione as id_fr_applicazione, p.data_pagamento as data_pagamento, p.importo_pagato as importo_pagato, p.iur as iur1, r.iuv as iuv, p.iban_accredito as iban_accredito from pagamenti p join rpt r on r.id=p.id_rpt where p.data_acquisizione between ? and ? and r.cod_dominio = ? ) UNION  ALL ( select rsr.id_singolo_versamento as id_singolo_versamento, rsr.id_fr_applicazione as id_fr_applicazione, rsr.rendicontazione_data as data_pagamento, rsr.importo_pagato as importo_pagato, rsr.iur as iur1, iu.iuv as iuv, '' as iban_accredito from rendicontazioni_senza_rpt rsr join iuv iu on iu.id=rsr.id_iuv where rsr.rendicontazione_data between ? and ? ) )as subquery1 order by iuv ASC, data_pagamento ASC ) pag left outer join fr_applicazioni fra on pag.id_fr_applicazione=fra.id left outer join fr f on f.id=fra.id_fr join singoli_versamenti sv on sv.id= pag.id_singolo_versamento left outer join domini d on f.id_dominio = d.id where (d.cod_dominio = ? or d.cod_dominio is null) order by cod_flusso_rendicontazione, iuv, data_pagamento OFFSET ? LIMIT ?
it.govpay.orm.nativeQuery.estrattiConto.mysql=SELECT data_pagamento, importo_pagato, iur1, iuv, f.cod_flusso as cod_flusso_rendicontazione, sv.cod_singolo_versamento_ente as cod_singolo_versamento_ente, sv.note as note, f.cod_bic_riversamento as cod_bic_riversamento,  f.iur as iur2, iban_accredito FROM ( SELECT id_singolo_versamento, id_fr_applicazione, data_pagamento, importo_pagato, iur1, iuv, iban_accredito FROM ( ( select p.id_singolo_versamento as id_singolo_versamento, p.id_fr_applicazione as id_fr_applicazione, p.data_pagamento as data_pagamento, p.importo_pagato as importo_pagato, p.iur as iur1, r.iuv as iuv, p.iban_accredito as iban_accredito from pagamenti p join rpt r on r.id=p.id_rpt where p.data_acquisizione between ? and ? and r.cod_dominio = ? ) UNION  ALL ( select rsr.id_singolo_versamento as id_singolo_versamento, rsr.id_fr_applicazione as id_fr_applicazione, rsr.rendicontazione_data as data_pagamento, rsr.importo_pagato as importo_pagato, rsr.iur as iur1, iu.iuv as iuv, '' as iban_accredito from rendicontazioni_senza_rpt rsr join iuv iu on iu.id=rsr.id_iuv where rsr.rendicontazione_data between ? and ? ) )as subquery1 order by iuv ASC, data_pagamento ASC ) pag left outer join fr_applicazioni fra on pag.id_fr_applicazione=fra.id left outer join fr f on f.id=fra.id_fr join singoli_versamenti sv on sv.id= pag.id_singolo_versamento left outer join domini d on f.id_dominio = d.id where (d.cod_dominio = ? or d.cod_dominio is null) order by cod_flusso_rendicontazione, iuv, data_pagamento LIMIT ?, ?
it.govpay.orm.nativeQuery.estrattiConto.oracle=SELECT data_pagamento, importo_pagato, iur1, iuv, cod_flusso_rendicontazione, cod_singolo_versamento_ente, note, cod_bic_riversamento,  iur2, iban_accredito FROM ( SELECT data_pagamento, importo_pagato, iur1, iuv, f.cod_flusso as cod_flusso_rendicontazione, sv.cod_singolo_versamento_ente as cod_singolo_versamento_ente, sv.note as note, f.cod_bic_riversamento as cod_bic_riversamento,  f.iur as iur2, iban_accredito, ROW_NUMBER() OVER ( ORDER BY iuv,data_pagamento) AS rowNumber FROM ( SELECT id_singolo_versamento, id_fr_applicazione, data_pagamento, importo_pagato, iur1, iuv, iban_accredito FROM ( ( select p.id_singolo_versamento as id_singolo_versamento, p.id_fr_applicazione as id_fr_applicazione, p.data_pagamento as data_pagamento, p.importo_pagato as importo_pagato, p.iur as iur1, r.iuv as iuv, p.iban_accredito as iban_accredito from pagamenti p join rpt r on r.id=p.id_rpt where p.data_acquisizione between ? and ? and r.cod_dominio = ? ) UNION  ALL ( select rsr.id_singolo_versamento as id_singolo_versamento, rsr.id_fr_applicazione as id_fr_applicazione, rsr.rendicontazione_data as data_pagamento, rsr.importo_pagato as importo_pagato, rsr.iur as iur1, iu.iuv as iuv, '' as iban_accredito from rendicontazioni_senza_rpt rsr join iuv iu on iu.id=rsr.id_iuv where rsr.rendicontazione_data between ? and ? ) ) order by iuv ASC, data_pagamento ASC ) pag left outer join fr_applicazioni fra on pag.id_fr_applicazione=fra.id left outer join fr f on f.id=fra.id_fr join singoli_versamenti sv on sv.id= pag.id_singolo_versamento left outer join domini d on f.id_dominio = d.id where (d.cod_dominio = ? or d.cod_dominio is null)) WHERE (  rowNumber > ?  AND rowNumber <= ? ) ORDER BY cod_flusso_rendicontazione, iuv, data_pagamento

# Query per la generazione degli estrattiConto in formato PDF utilizzando i versamenti selezionati dall'utente della console.

it.govpay.orm.nativeQuery.estrattiContoVersamenti.postgresql=SELECT data_pagamento, importo_pagato, iur1, iuv, f.cod_flusso as cod_flusso_rendicontazione ,cod_singolo_versamento_ente, note,   f.cod_bic_riversamento as cod_bic_riversamento,	f.iur as iur2,	iban_accredito FROM ( SELECT id_singolo_versamento, id_fr_applicazione, data_pagamento, importo_pagato, iur1, iuv, iban_accredito,cod_singolo_versamento_ente, note FROM	( ( select p.id_singolo_versamento as id_singolo_versamento, p.id_fr_applicazione as id_fr_applicazione, p.data_pagamento as data_pagamento, p.importo_pagato as importo_pagato, p.iur as iur1, r.iuv as iuv, p.iban_accredito as iban_accredito, sv.cod_singolo_versamento_ente as cod_singolo_versamento_ente, sv.note as note from pagamenti p join rpt r on r.id=p.id_rpt join singoli_versamenti sv on sv.id= p.id_singolo_versamento join versamenti v on v.id = sv.id_versamento where v.id in ( $ID_VERSAMENTI$ ) and r.cod_dominio = ? ) UNION  ALL ( select rsr.id_singolo_versamento as id_singolo_versamento, rsr.id_fr_applicazione as id_fr_applicazione, rsr.rendicontazione_data as data_pagamento, rsr.importo_pagato as importo_pagato, rsr.iur as iur1, iu.iuv as iuv, '' as iban_accredito, sv.cod_singolo_versamento_ente as cod_singolo_versamento_ente, sv.note as note from rendicontazioni_senza_rpt rsr join iuv iu on iu.id=rsr.id_iuv join singoli_versamenti sv on sv.id= rsr.id_singolo_versamento join versamenti v on v.id = sv.id_versamento where v.id in ( $ID_VERSAMENTI$ ) ) )as subquery1 order by iuv ASC, data_pagamento ASC ) pag left outer join fr_applicazioni fra on pag.id_fr_applicazione=fra.id left outer join fr f on f.id=fra.id_fr left outer join domini d on f.id_dominio = d.id  where (d.cod_dominio = ? or d.cod_dominio is null) order by cod_flusso_rendicontazione, iuv, data_pagamento  OFFSET ? LIMIT ?
it.govpay.orm.nativeQuery.estrattiContoVersamenti.mysql=SELECT data_pagamento, importo_pagato, iur1, iuv, f.cod_flusso as cod_flusso_rendicontazione ,cod_singolo_versamento_ente, note,   f.cod_bic_riversamento as cod_bic_riversamento,	f.iur as iur2,	iban_accredito FROM ( SELECT id_singolo_versamento, id_fr_applicazione, data_pagamento, importo_pagato, iur1, iuv, iban_accredito,cod_singolo_versamento_ente, note FROM	( ( select p.id_singolo_versamento as id_singolo_versamento, p.id_fr_applicazione as id_fr_applicazione, p.data_pagamento as data_pagamento, p.importo_pagato as importo_pagato, p.iur as iur1, r.iuv as iuv, p.iban_accredito as iban_accredito, sv.cod_singolo_versamento_ente as cod_singolo_versamento_ente, sv.note as note from pagamenti p join rpt r on r.id=p.id_rpt join singoli_versamenti sv on sv.id= p.id_singolo_versamento join versamenti v on v.id = sv.id_versamento where v.id in ( $ID_VERSAMENTI$ ) and r.cod_dominio = ? ) UNION  ALL ( select rsr.id_singolo_versamento as id_singolo_versamento, rsr.id_fr_applicazione as id_fr_applicazione, rsr.rendicontazione_data as data_pagamento, rsr.importo_pagato as importo_pagato, rsr.iur as iur1, iu.iuv as iuv, '' as iban_accredito, sv.cod_singolo_versamento_ente as cod_singolo_versamento_ente, sv.note as note from rendicontazioni_senza_rpt rsr join iuv iu on iu.id=rsr.id_iuv join singoli_versamenti sv on sv.id= rsr.id_singolo_versamento join versamenti v on v.id = sv.id_versamento where v.id in ( $ID_VERSAMENTI$ ) ) )as subquery1 order by iuv ASC, data_pagamento ASC ) pag left outer join fr_applicazioni fra on pag.id_fr_applicazione=fra.id left outer join fr f on f.id=fra.id_fr left outer join domini d on f.id_dominio = d.id  where (d.cod_dominio = ? or d.cod_dominio is null) order by cod_flusso_rendicontazione, iuv, data_pagamento  LIMIT ?, ?
it.govpay.orm.nativeQuery.estrattiContoVersamenti.oracle=select data_pagamento, importo_pagato, iur1, iuv, cod_flusso_rendicontazione, cod_singolo_versamento_ente, note, cod_bic_riversamento, iur2, iban_accredito from ( SELECT data_pagamento, importo_pagato, iur1, iuv,cod_singolo_versamento_ente, note,	f.cod_flusso as cod_flusso_rendicontazione ,   f.cod_bic_riversamento as cod_bic_riversamento,	f.iur as iur2,	iban_accredito, ROW_NUMBER() OVER ( ORDER BY iuv,data_pagamento) AS rowNumber  	FROM ( SELECT id_singolo_versamento, id_fr_applicazione, data_pagamento, importo_pagato, iur1, iuv, iban_accredito,cod_singolo_versamento_ente, note	FROM	( ( select p.id_singolo_versamento as id_singolo_versamento, p.id_fr_applicazione as id_fr_applicazione, p.data_pagamento as data_pagamento, p.importo_pagato as importo_pagato, p.iur as iur1, r.iuv as iuv, p.iban_accredito as iban_accredito, sv.cod_singolo_versamento_ente as cod_singolo_versamento_ente, sv.note as note	from pagamenti p join rpt r on r.id=p.id_rpt join singoli_versamenti sv on sv.id= p.id_singolo_versamento join versamenti v on v.id = sv.id_versamento  where v.id in ( $ID_VERSAMENTI$ ) and r.cod_dominio = ? ) UNION  ALL ( select rsr.id_singolo_versamento as id_singolo_versamento, rsr.id_fr_applicazione as id_fr_applicazione, rsr.rendicontazione_data as data_pagamento, rsr.importo_pagato as importo_pagato, rsr.iur as iur1, iu.iuv as iuv, '' as iban_accredito, sv.cod_singolo_versamento_ente as cod_singolo_versamento_ente, sv.note as note 	from rendicontazioni_senza_rpt rsr join iuv iu on iu.id=rsr.id_iuv 	join singoli_versamenti sv on sv.id= rsr.id_singolo_versamento join versamenti v on v.id = sv.id_versamento where v.id in ( $ID_VERSAMENTI$ ) 	) ) order by iuv ASC, data_pagamento ASC ) pag left outer join fr_applicazioni fra on pag.id_fr_applicazione=fra.id left outer join fr f on f.id=fra.id_fr 	left outer join domini d on f.id_dominio = d.id  where (d.cod_dominio = ? or d.cod_dominio is null)	) WHERE (  rowNumber > ?  AND rowNumber <= ? ) ORDER BY cod_flusso_rendicontazione, iuv, data_pagamento

# Query per la generazione dell'estratto conto della pagina reportisticapagamenti.

it.govpay.orm.nativeQuery.csvVersamenti.postgresql=SELECT data_pagamento, importo_pagato, iur1, iuv, f.cod_flusso as cod_flusso_rendicontazione ,cod_singolo_versamento_ente, note, f.cod_bic_riversamento as cod_bic_riversamento, f.iur as iur2, iban_accredito, id_versamento, cod_versamento_ente, stato_versamento, causale_versamento, debitore_identificativo, importo_singolo_versamento, stato_singolo_versamento FROM ( SELECT id_singolo_versamento, id_fr_applicazione, data_pagamento, importo_pagato, iur1, iuv, iban_accredito,cod_singolo_versamento_ente, note , id_versamento, cod_versamento_ente, stato_versamento, causale_versamento, debitore_identificativo, importo_singolo_versamento, stato_singolo_versamento FROM ( ( select p.id_singolo_versamento as id_singolo_versamento, p.id_fr_applicazione as id_fr_applicazione, p.data_pagamento as data_pagamento, p.importo_pagato as importo_pagato, p.iur as iur1, r.iuv as iuv, p.iban_accredito as iban_accredito, sv.cod_singolo_versamento_ente as cod_singolo_versamento_ente, sv.note as note, v.id as id_versamento, v.cod_versamento_ente as cod_versamento_ente, v.stato_versamento as stato_versamento, v.causale_versamento as causale_versamento, v.debitore_identificativo as debitore_identificativo, sv.importo_singolo_versamento as importo_singolo_versamento, sv.stato_singolo_versamento as stato_singolo_versamento from pagamenti p join rpt r on r.id=p.id_rpt join singoli_versamenti sv on sv.id= p.id_singolo_versamento join versamenti v on v.id = sv.id_versamento where v.id in ( $ID_VERSAMENTI$ ) ) UNION  ALL ( select rsr.id_singolo_versamento as id_singolo_versamento, rsr.id_fr_applicazione as id_fr_applicazione, rsr.rendicontazione_data as data_pagamento, rsr.importo_pagato as importo_pagato, rsr.iur as iur1, iu.iuv as iuv, '' as iban_accredito, sv.cod_singolo_versamento_ente as cod_singolo_versamento_ente, sv.note as note, v.id as id_versamento, v.cod_versamento_ente as cod_versamento_ente, v.stato_versamento as stato_versamento, v.causale_versamento as causale_versamento, v.debitore_identificativo as debitore_identificativo, sv.importo_singolo_versamento as importo_singolo_versamento, sv.stato_singolo_versamento as stato_singolo_versamento from rendicontazioni_senza_rpt rsr join iuv iu on iu.id=rsr.id_iuv join singoli_versamenti sv on sv.id= rsr.id_singolo_versamento join versamenti v on v.id = sv.id_versamento where v.id in ( $ID_VERSAMENTI$ ) ) )as subquery1 order by iuv ASC, data_pagamento ASC ) pag left outer join fr_applicazioni fra on pag.id_fr_applicazione=fra.id left outer join fr f on f.id=fra.id_fr order by cod_flusso_rendicontazione, iuv, data_pagamento  OFFSET ? LIMIT ?
it.govpay.orm.nativeQuery.csvVersamenti.mysql=SELECT data_pagamento, importo_pagato, iur1, iuv, f.cod_flusso as cod_flusso_rendicontazione ,cod_singolo_versamento_ente, note, f.cod_bic_riversamento as cod_bic_riversamento, f.iur as iur2, iban_accredito, id_versamento, cod_versamento_ente, stato_versamento, causale_versamento, debitore_identificativo, importo_singolo_versamento, stato_singolo_versamento FROM ( SELECT id_singolo_versamento, id_fr_applicazione, data_pagamento, importo_pagato, iur1, iuv, iban_accredito,cod_singolo_versamento_ente, note , id_versamento, cod_versamento_ente, stato_versamento, causale_versamento, debitore_identificativo, importo_singolo_versamento, stato_singolo_versamento FROM ( ( select p.id_singolo_versamento as id_singolo_versamento, p.id_fr_applicazione as id_fr_applicazione, p.data_pagamento as data_pagamento, p.importo_pagato as importo_pagato, p.iur as iur1, r.iuv as iuv, p.iban_accredito as iban_accredito, sv.cod_singolo_versamento_ente as cod_singolo_versamento_ente, sv.note as note, v.id as id_versamento, v.cod_versamento_ente as cod_versamento_ente, v.stato_versamento as stato_versamento, v.causale_versamento as causale_versamento, v.debitore_identificativo as debitore_identificativo, sv.importo_singolo_versamento as importo_singolo_versamento, sv.stato_singolo_versamento as stato_singolo_versamento from pagamenti p join rpt r on r.id=p.id_rpt join singoli_versamenti sv on sv.id= p.id_singolo_versamento join versamenti v on v.id = sv.id_versamento where v.id in ( $ID_VERSAMENTI$ )  ) UNION  ALL ( select rsr.id_singolo_versamento as id_singolo_versamento, rsr.id_fr_applicazione as id_fr_applicazione, rsr.rendicontazione_data as data_pagamento, rsr.importo_pagato as importo_pagato, rsr.iur as iur1, iu.iuv as iuv, '' as iban_accredito, sv.cod_singolo_versamento_ente as cod_singolo_versamento_ente, sv.note as note, v.id as id_versamento, v.cod_versamento_ente as cod_versamento_ente, v.stato_versamento as stato_versamento, v.causale_versamento as causale_versamento, v.debitore_identificativo as debitore_identificativo, sv.importo_singolo_versamento as importo_singolo_versamento, sv.stato_singolo_versamento as stato_singolo_versamento from rendicontazioni_senza_rpt rsr join iuv iu on iu.id=rsr.id_iuv join singoli_versamenti sv on sv.id= rsr.id_singolo_versamento join versamenti v on v.id = sv.id_versamento where v.id in ( $ID_VERSAMENTI$ ) ) )as subquery1 order by iuv ASC, data_pagamento ASC ) pag left outer join fr_applicazioni fra on pag.id_fr_applicazione=fra.id left outer join fr f on f.id=fra.id_fr order by cod_flusso_rendicontazione, iuv, data_pagamento LIMIT ?, ?
it.govpay.orm.nativeQuery.csvVersamenti.oracle=select data_pagamento, importo_pagato, iur1, iuv, cod_flusso_rendicontazione, cod_singolo_versamento_ente, note, cod_bic_riversamento, iur2, iban_accredito, id_versamento, cod_versamento_ente, stato_versamento, causale_versamento, debitore_identificativo, importo_singolo_versamento, stato_singolo_versamento from ( SELECT data_pagamento, importo_pagato, iur1, iuv,cod_singolo_versamento_ente, note,	f.cod_flusso as cod_flusso_rendicontazione ,   f.cod_bic_riversamento as cod_bic_riversamento,	f.iur as iur2,	iban_accredito, id_versamento, cod_versamento_ente, stato_versamento, causale_versamento, debitore_identificativo, importo_singolo_versamento, stato_singolo_versamento, ROW_NUMBER() OVER ( ORDER BY iuv,data_pagamento) AS rowNumber FROM ( SELECT id_singolo_versamento, id_fr_applicazione, data_pagamento, importo_pagato, iur1, iuv, iban_accredito,cod_singolo_versamento_ente, note, id_versamento, cod_versamento_ente, stato_versamento, causale_versamento, debitore_identificativo, importo_singolo_versamento, stato_singolo_versamento FROM ( ( select p.id_singolo_versamento as id_singolo_versamento, p.id_fr_applicazione as id_fr_applicazione, p.data_pagamento as data_pagamento, p.importo_pagato as importo_pagato, p.iur as iur1, r.iuv as iuv, p.iban_accredito as iban_accredito, sv.cod_singolo_versamento_ente as cod_singolo_versamento_ente, sv.note as note, v.id as id_versamento, v.cod_versamento_ente as cod_versamento_ente, v.stato_versamento as stato_versamento, v.causale_versamento as causale_versamento, v.debitore_identificativo as debitore_identificativo, sv.importo_singolo_versamento as importo_singolo_versamento, sv.stato_singolo_versamento as stato_singolo_versamento from pagamenti p join rpt r on r.id=p.id_rpt join singoli_versamenti sv on sv.id= p.id_singolo_versamento join versamenti v on v.id = sv.id_versamento  where v.id in ( $ID_VERSAMENTI$ ) ) UNION  ALL ( select rsr.id_singolo_versamento as id_singolo_versamento, rsr.id_fr_applicazione as id_fr_applicazione, rsr.rendicontazione_data as data_pagamento, rsr.importo_pagato as importo_pagato, rsr.iur as iur1, iu.iuv as iuv, '' as iban_accredito, sv.cod_singolo_versamento_ente as cod_singolo_versamento_ente, sv.note as note, v.id as id_versamento, v.cod_versamento_ente as cod_versamento_ente, v.stato_versamento as stato_versamento, v.causale_versamento as causale_versamento, v.debitore_identificativo as debitore_identificativo, sv.importo_singolo_versamento as importo_singolo_versamento, sv.stato_singolo_versamento as stato_singolo_versamento from rendicontazioni_senza_rpt rsr join iuv iu on iu.id=rsr.id_iuv join singoli_versamenti sv on sv.id= rsr.id_singolo_versamento join versamenti v on v.id = sv.id_versamento where v.id in ( $ID_VERSAMENTI$ ) ) ) order by iuv ASC, data_pagamento ASC ) pag left outer join fr_applicazioni fra on pag.id_fr_applicazione=fra.id left outer join fr f on f.id=fra.id_fr ) WHERE (  rowNumber > ?  AND rowNumber <= ? ) ORDER BY cod_flusso_rendicontazione, iuv, data_pagamento
